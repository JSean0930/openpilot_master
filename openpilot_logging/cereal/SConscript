Import('env', 'common', 'msgq')

cereal_dir = Dir('.')
gen_dir = Dir('gen')

# Build cereal
schema_files = ['log.capnp', 'legacy.capnp', 'custom.capnp']
external_schema_files = ['car.capnp']
env.Command([f'gen/cpp/{s}.c++' for s in schema_files + external_schema_files] + [f'gen/cpp/{s}.h' for s in schema_files + external_schema_files],
            schema_files + [f'../../opendbc_repo/opendbc/car/{s}' for s in external_schema_files],
#             f"capnpc --src-prefix={cereal_dir.path} $SOURCES -o c++:{gen_dir.path}/cpp/")
            f"capnpc --src-prefix={cereal_dir.path} -I openpilot_logging/cereal/ -I opendbc_repo/opendbc/car $SOURCES -o c++:{gen_dir.path}/cpp/")

env.Append(CCFLAGS=["-I", "openpilot_logging/cereal/gen/cpp"])

cereal = env.Library('cereal', [f'gen/cpp/{s}.c++' for s in schema_files])

# Build messaging
services_h = env.Command(['services.h'], ['services.py'], 'python3 ' + cereal_dir.path + '/services.py > $TARGET')
env.Program('messaging/bridge', ['messaging/bridge.cc', 'messaging/msgq_to_zmq.cc'], LIBS=[msgq, common, 'pthread'])

socketmaster = env.Library('socketmaster', ['messaging/socketmaster.cc'])

Export('cereal', 'socketmaster')
